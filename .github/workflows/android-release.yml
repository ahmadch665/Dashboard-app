name: Build and Release APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MYAPP_RELEASE_STORE_FILE: ./Dashboard-app/my-release-key.jks
      MYAPP_RELEASE_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      MYAPP_RELEASE_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      MYAPP_RELEASE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      - name: Decode keystore
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > $MYAPP_RELEASE_STORE_FILE
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Build Release APK
        run: |
          cd Dashboard-app
          ./gradlew clean assembleRelease \
            -PMYAPP_RELEASE_STORE_FILE="$MYAPP_RELEASE_STORE_FILE" \
            -PMYAPP_RELEASE_KEY_ALIAS="$MYAPP_RELEASE_KEY_ALIAS" \
            -PMYAPP_RELEASE_STORE_PASSWORD="$MYAPP_RELEASE_STORE_PASSWORD" \
            -PMYAPP_RELEASE_KEY_PASSWORD="$MYAPP_RELEASE_KEY_PASSWORD"

      - name: Upload Release APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: Dashboard-app/app/build/outputs/apk/release/app-release.apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: Dashboard-app/app/build/outputs/apk/release/app-release.apk
          tag_name: v${{ github.run_number }}
          name: "Release Build #${{ github.run_number }}"
          body: |
            ðŸš€ Automatic release generated by GitHub Actions.
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
